{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhem/Desktop/React/seasons/src/index.js\";\n// App component to grab user data and communicate to child components\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\n\nclass App extends React.Component {\n  //js specific for creating classes\n  //automatically called props \n  constructor(props) {\n    //we have to call super due to extending React.Component\n    super(props); //only time where you do direct assignment to state of the\n    //component\n\n    this.state = {\n      lat: null,\n      errMsg: ''\n    };\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude\n      });\n    }, err => {\n      this.setState({\n        errMsg: err.message\n      });\n    });\n  }\n\n  componentDidMount() {\n    console.log('My component was rendered to the screen');\n  }\n\n  componentDidUpdate() {\n    console.log('My component was just updated - it rerendered!');\n  } //we have to define render\n\n\n  render() {\n    if (this.state.errMsg && !this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Error: \", this.state.errMsg);\n    }\n\n    if (!this.state.errMsg && this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"LatitudeL \", this.state.lat);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Loading~\");\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/anthonyhem/Desktop/React/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","App","Component","constructor","props","state","lat","errMsg","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","componentDidMount","console","log","componentDidUpdate","render","document","querySelector"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAEjC;AACA;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB;AACA,UAAMA,KAAN,EAFiB,CAIjB;AACA;;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,GAAG,EAAE,IAAN;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAb;AAEAC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACEC,QAAD,IAAc;AACb,WAAKC,QAAL,CAAc;AAACP,QAAAA,GAAG,EAACM,QAAQ,CAACE,MAAT,CAAgBC;AAArB,OAAd;AACA,KAHF,EAIEC,GAAD,IAAS;AACR,WAAKH,QAAL,CAAc;AAACN,QAAAA,MAAM,EAAES,GAAG,CAACC;AAAb,OAAd;AACA,KANF;AAQA;;AAEDC,EAAAA,iBAAiB,GAAE;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACA;;AAEDC,EAAAA,kBAAkB,GAAE;AACnBF,IAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACA,GA5BgC,CA8BjC;;;AACAE,EAAAA,MAAM,GAAG;AACR,QAAG,KAAKjB,KAAL,CAAWE,MAAX,IAAqB,CAAC,KAAKF,KAAL,CAAWC,GAApC,EAAyC;AACxC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWE,MAAxB,CAAP;AACA;;AACD,QAAG,CAAC,KAAKF,KAAL,CAAWE,MAAZ,IAAsB,KAAKF,KAAL,CAAWC,GAApC,EAAyC;AACxC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKD,KAAL,CAAWC,GAA3B,CAAP;AACA;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACA;;AAvCgC;;AA0ClCP,QAAQ,CAACuB,MAAT,CACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EAECC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFD","sourcesContent":["// App component to grab user data and communicate to child components\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay'\n\nclass App extends React.Component {\n\n\t//js specific for creating classes\n\t//automatically called props \n\tconstructor(props){\n\t\t//we have to call super due to extending React.Component\n\t\tsuper(props);\n\n\t\t//only time where you do direct assignment to state of the\n\t\t//component\n\t\tthis.state = {lat: null, errMsg: ''};\n\n\t\twindow.navigator.geolocation.getCurrentPosition(\n\t\t\t(position) => {\n\t\t\t\tthis.setState({lat:position.coords.latitude});\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tthis.setState({errMsg: err.message});\n\t\t\t}\n\t\t);\n\t}\n\n\tcomponentDidMount(){\n\t\tconsole.log('My component was rendered to the screen');\n\t}\n\n\tcomponentDidUpdate(){\n\t\tconsole.log('My component was just updated - it rerendered!');\n\t}\n\n\t//we have to define render\n\trender() {\n\t\tif(this.state.errMsg && !this.state.lat) {\n\t\t\treturn <div>Error: {this.state.errMsg}</div>\n\t\t}\n\t\tif(!this.state.errMsg && this.state.lat) {\n\t\t\treturn <div>LatitudeL {this.state.lat}</div>\n\t\t}\n\t\treturn <div>Loading~</div>\n\t}\n}\n\nReactDOM.render(\n\t<App />,\n\tdocument.querySelector('#root')\n);"]},"metadata":{},"sourceType":"module"}