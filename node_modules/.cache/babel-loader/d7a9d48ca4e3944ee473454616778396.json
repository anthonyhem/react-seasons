{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyhem/Desktop/React/seasons/src/index.js\";\n// App component to grab user data and communicate to child components\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude\n    }), err => this.setState({\n      errMsg: err.message\n    }));\n  }\n\n  componentDidUpdate() {\n    console.log('My component was just updated - it rerendered!');\n  } //we have to define render\n\n\n  render() {\n    if (this.state.errMsg && !this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Error: \", this.state.errMsg);\n    }\n\n    if (!this.state.errMsg && this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Latitude: \", this.state.lat);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Loading~\");\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/anthonyhem/Desktop/React/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","App","Component","state","lat","errMsg","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","componentDidUpdate","console","log","render","document","querySelector"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAEzB;AAACC,MAAAA,GAAG,EAAE,IAAN;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAFyB;AAAA;;AAIjCC,EAAAA,iBAAiB,GAAE;AAClBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACEC,QAAD,IAAc,KAAKC,QAAL,CAAc;AAACR,MAAAA,GAAG,EAACO,QAAQ,CAACE,MAAT,CAAgBC;AAArB,KAAd,CADf,EAEEC,GAAD,IAAS,KAAKH,QAAL,CAAc;AAACP,MAAAA,MAAM,EAAEU,GAAG,CAACC;AAAb,KAAd,CAFV;AAIA;;AAEDC,EAAAA,kBAAkB,GAAE;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACA,GAbgC,CAejC;;;AACAC,EAAAA,MAAM,GAAG;AACR,QAAG,KAAKjB,KAAL,CAAWE,MAAX,IAAqB,CAAC,KAAKF,KAAL,CAAWC,GAApC,EAAyC;AACxC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWE,MAAxB,CAAP;AACA;;AACD,QAAG,CAAC,KAAKF,KAAL,CAAWE,MAAZ,IAAsB,KAAKF,KAAL,CAAWC,GAApC,EAAyC;AACxC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKD,KAAL,CAAWC,GAA3B,CAAP;AACA;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACA;;AAxBgC;;AA2BlCL,QAAQ,CAACqB,MAAT,CACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EAECC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFD","sourcesContent":["// App component to grab user data and communicate to child components\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay'\n\nclass App extends React.Component {\n\n\tstate = {lat: null, errMsg: ''};\n\n\tcomponentDidMount(){\n\t\twindow.navigator.geolocation.getCurrentPosition(\n\t\t\t(position) => this.setState({lat:position.coords.latitude}),\n\t\t\t(err) => this.setState({errMsg: err.message})\n\t\t);\n\t}\n\n\tcomponentDidUpdate(){\n\t\tconsole.log('My component was just updated - it rerendered!');\n\t}\n\n\t//we have to define render\n\trender() {\n\t\tif(this.state.errMsg && !this.state.lat) {\n\t\t\treturn <div>Error: {this.state.errMsg}</div>\n\t\t}\n\t\tif(!this.state.errMsg && this.state.lat) {\n\t\t\treturn <div>Latitude: {this.state.lat}</div>\n\t\t}\n\t\treturn <div>Loading~</div>\n\t}\n}\n\nReactDOM.render(\n\t<App />,\n\tdocument.querySelector('#root')\n);"]},"metadata":{},"sourceType":"module"}